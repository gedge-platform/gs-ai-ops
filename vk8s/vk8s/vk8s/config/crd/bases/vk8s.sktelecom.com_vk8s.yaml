---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: vk8s.vk8s.sktelecom.com
spec:
  group: vk8s.sktelecom.com
  names:
    kind: Vk8s
    listKind: Vk8sList
    plural: vk8s
    singular: vk8s
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Vk8s is the Schema for the vk8s API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Vk8sSpec defines the desired state of Vk8s
            properties:
              accessPodImage:
                description: AccessPodImage is image of access pod for vk8s cluster
                type: string
              accessPodPort:
                description: AccessPodPort is ssh export port number of access pod
                format: int32
                type: integer
              kubeflow:
                description: Kubeflow is kubeflow's version to install
                properties:
                  email:
                    description: Email is email of kubeflow
                    type: string
                  password:
                    description: Password is password of kubeflow
                    type: string
                  version:
                    description: Version is version of kubeflow
                    type: string
                required:
                - email
                - password
                type: object
              kubernetes:
                description: Kubernetes is options for kubeadm init command
                properties:
                  podNetworkCidr:
                    description: PodNetworkCidr is pod network cidr of vk8s cluster.
                      Must be different from pod network cidr of host kubernetes cluster
                    type: string
                  serviceCidr:
                    description: ServiceCidr is service cidr if vk8s cluster. Must
                      be different from service cidr of host kubernetes cluster
                    type: string
                type: object
              nodes:
                description: Nodes are virtual nodes' spec. image, resource, etc.
                items:
                  description: NodePod defines the desired state of pod which is used
                    for virtual k8s node
                  properties:
                    image:
                      description: Image is image of virtual node pod
                      type: string
                    name:
                      description: Name is name of virtual node pod
                      type: string
                    resources:
                      description: Resources is virtual node pod's resource. requests
                        and limit will always same.
                      properties:
                        claims:
                          description: "Claims lists the names of resources, defined
                            in spec.resourceClaims, that are used by this container.
                            \n This is an alpha field and requires enabling the DynamicResourceAllocation
                            feature gate. \n This field is immutable."
                          items:
                            description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                            properties:
                              name:
                                description: Name must match the name of one entry
                                  in pod.spec.resourceClaims of the Pod where this
                                  field is used. It makes that resource available
                                  inside a container.
                                type: string
                            required:
                            - name
                            type: object
                          type: array
                          x-kubernetes-list-map-keys:
                          - name
                          x-kubernetes-list-type: map
                        limits:
                          additionalProperties:
                            anyOf:
                            - type: integer
                            - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: 'Limits describes the maximum amount of compute
                            resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                            - type: integer
                            - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: 'Requests describes the minimum amount of compute
                            resources required. If Requests is omitted for a container,
                            it defaults to Limits if that is explicitly specified,
                            otherwise to an implementation-defined value. More info:
                            https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                          type: object
                      type: object
                    role:
                      description: Role is kubernetes role of virtual node. Possible
                        values are master|worker
                      type: string
                    tolerations:
                      description: Tolerations are tolerations for taints of nodes
                      items:
                        description: The pod this Toleration is attached to tolerates
                          any taint that matches the triple <key,value,effect> using
                          the matching operator <operator>.
                        properties:
                          effect:
                            description: Effect indicates the taint effect to match.
                              Empty means match all taint effects. When specified,
                              allowed values are NoSchedule, PreferNoSchedule and
                              NoExecute.
                            type: string
                          key:
                            description: Key is the taint key that the toleration
                              applies to. Empty means match all taint keys. If the
                              key is empty, operator must be Exists; this combination
                              means to match all values and all keys.
                            type: string
                          operator:
                            description: Operator represents a key's relationship
                              to the value. Valid operators are Exists and Equal.
                              Defaults to Equal. Exists is equivalent to wildcard
                              for value, so that a pod can tolerate all taints of
                              a particular category.
                            type: string
                          tolerationSeconds:
                            description: TolerationSeconds represents the period of
                              time the toleration (which must be of effect NoExecute,
                              otherwise this field is ignored) tolerates the taint.
                              By default, it is not set, which means tolerate the
                              taint forever (do not evict). Zero and negative values
                              will be treated as 0 (evict immediately) by the system.
                            format: int64
                            type: integer
                          value:
                            description: Value is the taint value the toleration matches
                              to. If the operator is Exists, the value should be empty,
                              otherwise just a regular string.
                            type: string
                        type: object
                      type: array
                  required:
                  - image
                  - name
                  - resources
                  - role
                  type: object
                type: array
              ports:
                description: Ports are port list that user want to expose
                items:
                  description: ServicePort contains information on service's port.
                  properties:
                    appProtocol:
                      description: The application protocol for this port. This field
                        follows standard Kubernetes label syntax. Un-prefixed names
                        are reserved for IANA standard service names (as per RFC-6335
                        and https://www.iana.org/assignments/service-names). Non-standard
                        protocols should use prefixed names such as mycompany.com/my-custom-protocol.
                      type: string
                    name:
                      description: The name of this port within the service. This
                        must be a DNS_LABEL. All ports within a ServiceSpec must have
                        unique names. When considering the endpoints for a Service,
                        this must match the 'name' field in the EndpointPort. Optional
                        if only one ServicePort is defined on this service.
                      type: string
                    nodePort:
                      description: 'The port on each node on which this service is
                        exposed when type is NodePort or LoadBalancer.  Usually assigned
                        by the system. If a value is specified, in-range, and not
                        in use it will be used, otherwise the operation will fail.  If
                        not specified, a port will be allocated if this Service requires
                        one.  If this field is specified when creating a Service which
                        does not need it, creation will fail. This field will be wiped
                        when updating a Service to no longer need it (e.g. changing
                        type from NodePort to ClusterIP). More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport'
                      format: int32
                      type: integer
                    port:
                      description: The port that will be exposed by this service.
                      format: int32
                      type: integer
                    protocol:
                      default: TCP
                      description: The IP protocol for this port. Supports "TCP",
                        "UDP", and "SCTP". Default is TCP.
                      type: string
                    targetPort:
                      anyOf:
                      - type: integer
                      - type: string
                      description: 'Number or name of the port to access on the pods
                        targeted by the service. Number must be in the range 1 to
                        65535. Name must be an IANA_SVC_NAME. If this is a string,
                        it will be looked up as a named port in the target Pod''s
                        container ports. If this is not specified, the value of the
                        ''port'' field is used (an identity map). This field is ignored
                        for services with clusterIP=None, and should be omitted or
                        set equal to the ''port'' field. More info: https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service'
                      x-kubernetes-int-or-string: true
                  required:
                  - port
                  type: object
                type: array
            required:
            - nodes
            type: object
          status:
            description: Vk8sStatus defines the observed state of Vk8s
            properties:
              conditions:
                items:
                  properties:
                    lastProbeTime:
                      description: Last time we probed the condition
                      format: date-time
                      type: string
                    message:
                      description: Message regarding result of the phase
                      type: string
                    phase:
                      description: Phase is stage of initializing vk8s
                      type: string
                  type: object
                type: array
              message:
                description: Message regarding why the vk8s is in the current phase
                type: string
              phase:
                description: Phase is current phase among vk8s initializing process
                type: string
              vnodeKubernetesSetupStatuses:
                additionalProperties:
                  properties:
                    isKubernetesSetup:
                      description: IsK8sSet whether setup is completed for kubernetes
                      type: string
                    message:
                      description: Message regarding why the pod is in the current
                        status
                      type: string
                    status:
                      description: Status is the pod status of vnode
                      type: string
                  type: object
                description: VNodeKubernetesSetupStatuses is vnode pod status and
                  whether pod is set for kubernetes
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
